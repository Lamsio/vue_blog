(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{468:function(t,a,s){"use strict";s.r(a);var r=s(4),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"eigrp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eigrp协议"}},[t._v("#")]),t._v(" EIGRP协议")]),t._v(" "),a("p",[t._v("该协议运行在Cisco设备上，因此其他品牌如华为路由器可能未必支持该协议")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),a("ol",[a("li",[t._v("带宽占用低，触发式更新而并非周期性")]),t._v(" "),a("li",[t._v("多网络层协议（IP、IPX、Appletalk、etc...）")]),t._v(" "),a("li",[t._v("支持VLSM与不连续子网")]),t._v(" "),a("li",[t._v("无环路")]),t._v(" "),a("li",[t._v("快速收敛")])]),t._v(" "),a("p",[t._v("两台运行EIGRP协议的路由器会在初次通过相互发送简单报文的形式得知彼此存在并建立邻居关系")]),t._v(" "),a("p",[a("img",{attrs:{src:"/more/Pasted%20image%2020220531133814.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("首先建立邻居关系表，然后进行路由信息的同步和传输，再更新拓扑表中对于该网络的理解，到达某个目的地所有可能的路由，让然后选取最优解再放入自身路由表中。")]),t._v(" "),a("h4",{attrs:{id:"报文类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报文类型"}},[t._v("#")]),t._v(" 报文类型")]),t._v(" "),a("p",[a("img",{attrs:{src:"/more/Pasted%20image%2020220531134340.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("分为五类：\n- Hello : 用于确认邻居关系的简单报文\n- 更新报文 : 仅在开始时以及后续网路拓扑变更时才会发送更新报文，用于更新关系\n- ACK : 更新报文的接收方需要发送ACK报文给发送方进行确认，如果在规定时间内没发送，发送方会连续重新发送16次更新报文，如仍未收到ACK回复，则默认重新确认关系\n- 查询 : 当某条路由丢失时，向邻居查询相关信息")]),t._v(" "),a("h4",{attrs:{id:"eigrp的metric"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eigrp的metric"}},[t._v("#")]),t._v(" EIGRP的Metric")]),t._v(" "),a("p",[t._v("在RIP中，路由的好坏是根据跳数来决定的。\n"),a("img",{attrs:{src:"/more/Pasted%20image%2020220531135232.png",alt:"avatar"}}),t._v("\n在上面例子中，RIP一定会选择56K的线路，因为只有1跳，但很明显56K的带宽速度极慢，相比两跳的100M实际效率更低！")]),t._v(" "),a("p",[t._v("EIGRP的metric计算比RIP复杂许多，采用5个标准：")]),t._v(" "),a("ol",[a("li",[t._v("带宽")]),t._v(" "),a("li",[t._v("延迟")]),t._v(" "),a("li",[t._v("接口可靠性")]),t._v(" "),a("li",[t._v("复杂度")]),t._v(" "),a("li",[t._v("MTU")])]),t._v(" "),a("h6",{attrs:{id:"metric-计算公式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metric-计算公式"}},[t._v("#")]),t._v(" Metric 计算公式")]),t._v(" "),a("p",[a("img",{attrs:{src:"/more/Pasted%20image%2020220531135959.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("该式子十分复杂，但在默认情况下其实只是"),a("code",[t._v("带宽+延迟")]),t._v("而已。")]),t._v(" "),a("h4",{attrs:{id:"dual算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dual算法"}},[t._v("#")]),t._v(" DUAL算法")]),t._v(" "),a("p",[t._v("Diffusing Update Algorithm 用于计算最佳无环路经和备用路径")]),t._v(" "),a("p",[t._v("特点:")]),t._v(" "),a("ul",[a("li",[t._v("无环拓扑")]),t._v(" "),a("li",[t._v("可立即使用的无环备用路径")]),t._v(" "),a("li",[t._v("快速收敛")]),t._v(" "),a("li",[t._v("低带宽利用率")])]),t._v(" "),a("h6",{attrs:{id:"名词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#名词"}},[t._v("#")]),t._v(" 名词")]),t._v(" "),a("ul",[a("li",[t._v("后继路由器 : 下一跳的路由器")]),t._v(" "),a("li",[t._v("FD : 可行距离，即起点至终点的距离")]),t._v(" "),a("li",[t._v("FS : 可行后继路由器, 当后继路由器线路中断时，备用后继路由器")]),t._v(" "),a("li",[t._v("AD : 通告距离，其他路由器通告给自己到达目的地的距离")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/more/Pasted%20image%2020220531154307.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("当多个路由器的Metric相同时，就能达到负载均衡的效果，路由器会随意选择一个作为下一跳路由器，这被称为"),a("strong",[t._v("等价负载均衡")])]),t._v(" "),a("h4",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[a("code",[t._v("Router(config)# router eigrp autonomous-system")]),t._v("\nautonomous-system参数称为自治系统编号\n当我们配置邻居时，确保autonomous-system编号是相同的")]),t._v(" "),a("p",[t._v("Router1\nIP : 192.168.12.1 255.255.255.0\nAutonomous-system : 100\n"),a("code",[t._v("network 192.168.12.0")])]),t._v(" "),a("p",[t._v("Router2\nIP : 192.168.12.2 255.255.255.0\nAutonomous-system : 100\n"),a("code",[t._v("network 192.168.12.0")])]),t._v(" "),a("h6",{attrs:{id:"常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[t._v("#")]),t._v(" 常用指令")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show ip eigrp neighbors - 显示周围邻居\n\nshow ip eigrp topology - 显示拓扑表\n\nshow ip route eigrp\n\nshow ip protocols\n\nshow ip eigrp traffic\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h6",{attrs:{id:"不等价负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不等价负载均衡"}},[t._v("#")]),t._v(" 不等价负载均衡")]),t._v(" "),a("p",[t._v("该功能改变了原有的规则（原本规则是取Metric最优的作为下一跳路由），为了避免负载压力过大，允许设置稍差的Metric路由放入路由表中进行负载均衡。\n"),a("code",[t._v("Router(router-config)# variance 2")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/more/Pasted%20image%2020220531172546.png",alt:"avatar"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);