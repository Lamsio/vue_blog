(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{439:function(a,t,e){"use strict";e.r(t);var v=e(4),_=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"依赖的依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖的依赖"}},[a._v("#")]),a._v(" 依赖的依赖")]),a._v(" "),t("p",[a._v("上一章中，我们成功地将一个项目中的一部分作为模块分离了出来，但在构建该模块时，我们可能需要依赖到一些外部库，例如：")]),a._v(" "),t("ol",[t("li",[a._v("druid")]),a._v(" "),t("li",[a._v("mysql-connector-java\n等等。")])]),a._v(" "),t("p",[a._v("但当我们的主项目引用这些自定义模块时，我们从项目maven结构中可以看到\n![[Pasted image 20220617142938.png]]\n主项目"),t("code",[a._v("maven_02")]),a._v("依赖的"),t("code",[a._v("maven_04")]),a._v("中其实包含了与主项目相同的依赖\n"),t("code",[a._v("org.mybatis")])]),a._v(" "),t("p",[a._v("倘若你将主项目中"),t("code",[a._v("org.mybatis")]),a._v("依赖删了，你依旧可以使用该功能，因为你依赖的"),t("code",[a._v("maven_04")]),a._v("中还有这个库，所以可以不用担心~")]),a._v(" "),t("h4",{attrs:{id:"思考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[a._v("#")]),a._v(" 思考")]),a._v(" "),t("p",[a._v("![[Pasted image 20220617143510.png]]\n在上面的情况中，到底会发生什么事？")]),a._v(" "),t("h6",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[a._v("#")]),a._v(" 结论")]),a._v(" "),t("p",[a._v("同一个项目中，如果依赖了多个不同版本相同的库时，以最后一个为准。\n![[Pasted image 20220617143752.png]]")]),a._v(" "),t("p",[a._v("若不在同一项目中时，则根据层级判断优先级\n![[Pasted image 20220617144043.png]]")]),a._v(" "),t("h4",{attrs:{id:"直观地查看依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#直观地查看依赖"}},[a._v("#")]),a._v(" 直观地查看依赖")]),a._v(" "),t("p",[a._v("在IDEA中，提供了图例形式展示依赖关系")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("选择Maven界面\n![[Pasted image 20220617144244.png]]")])]),a._v(" "),t("li",[t("p",[a._v("点击show dependencies\n![[Pasted image 20220617144323.png]]")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);