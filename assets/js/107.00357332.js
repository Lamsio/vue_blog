(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{436:function(a,t,v){"use strict";v.r(t);var e=v(4),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),t("p",[a._v("Maven是专门用于管理和构建JAVA项目的工具，他主要功能：")]),a._v(" "),t("ol",[t("li",[a._v("提供标准化的项目结构")]),a._v(" "),t("li",[a._v("提供标准化的构建流程(编译、测试、打包、发布...)")]),a._v(" "),t("li",[a._v("提供依赖管理机制")])]),a._v(" "),t("p",[a._v("我们经常写代码所使用的IDE无非就是Eclipse、MyEclipse和JetBrain IDEA，但这些IDE创建项目都有自己的标准（Eclipse的库是libs，IDEA是libaray），这种问题会导致Eclipse创建的项目无法导入到其他IDE中继续开发。 因此为了避免这种情况，我们需要用到Maven统一规范。")]),a._v(" "),t("h6",{attrs:{id:"maven项目结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven项目结构"}},[a._v("#")]),a._v(" Maven项目结构")]),a._v(" "),t("p",[a._v("![[Pasted image 20220607163825.png]]")]),a._v(" "),t("h4",{attrs:{id:"仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[a._v("#")]),a._v(" 仓库")]),a._v(" "),t("p",[a._v("我们在"),t("code",[a._v("pom.xml")]),a._v("中能看到项目的依赖配置，当我们写上我们需要用的依赖库时，他就能自动帮我们导入，那么问题来了，这些包哪来的呢？？\n![[Pasted image 20220607171443.png]]")]),a._v(" "),t("p",[a._v("首先，当获得新的依赖请求时，会先在本地的仓库中寻找，如果没有再去中央仓库/远程仓库中寻找。在中央/远程仓库中找到依赖库后，会下载到本地仓库")]),a._v(" "),t("h4",{attrs:{id:"常用指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[a._v("#")]),a._v(" 常用指令")]),a._v(" "),t("ol",[t("li",[a._v("compile - 编译项目")]),a._v(" "),t("li",[a._v("clean - 清理生成的target文件夹")]),a._v(" "),t("li",[a._v("package - 打包项目")]),a._v(" "),t("li",[a._v("test - 测试，自动执行test文件夹下的测试代码")]),a._v(" "),t("li",[a._v("install - 安装当前项目到本地仓库")])]),a._v(" "),t("h4",{attrs:{id:"生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[a._v("#")]),a._v(" 生命周期")]),a._v(" "),t("p",[a._v("![[Pasted image 20220607172620.png]]")])])}),[],!1,null,null,null);t.default=s.exports}}]);