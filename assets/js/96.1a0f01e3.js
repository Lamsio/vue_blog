(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{426:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"三维数学-vector3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三维数学-vector3"}},[t._v("#")]),t._v(" 三维数学 - Vector3")]),t._v(" "),s("ul",[s("li",[t._v("向量\n"),s("ol",[s("li",[t._v("什么是向量")]),t._v(" "),s("li",[t._v("向量的形式")]),t._v(" "),s("li",[t._v("向量的大小")]),t._v(" "),s("li",[t._v("向量的方向")])])]),t._v(" "),s("li",[t._v("向量运算\n"),s("ol",[s("li",[t._v("向量相减")]),t._v(" "),s("li",[t._v("向量相加")]),t._v(" "),s("li",[t._v("向量与标量的乘除法")]),t._v(" "),s("li",[t._v("点乘")]),t._v(" "),s("li",[t._v("叉乘")])])]),t._v(" "),s("li",[t._v("三角函数\n"),s("ol",[s("li",[t._v("角的度量单位")]),t._v(" "),s("li",[t._v("三角函数")]),t._v(" "),s("li",[t._v("反三角函数")]),t._v(" "),s("li",[t._v("欧拉角")])])]),t._v(" "),s("li",[t._v("常用属性与方法")])]),t._v(" "),s("h2",{attrs:{id:"向量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量"}},[t._v("#")]),t._v(" 向量")]),t._v(" "),s("h4",{attrs:{id:"什么是向量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是向量"}},[t._v("#")]),t._v(" 什么是向量")]),t._v(" "),s("ul",[s("li",[t._v("一个数字列表，表示各维度上的有向位移。")]),t._v(" "),s("li",[t._v("一个有大小、方向的物理量\n"),s("ul",[s("li",[t._v("大小即为向量的模长")]),t._v(" "),s("li",[t._v("方向即为空间中向量的指向")])])]),t._v(" "),s("li",[t._v("可以表示物体的位置与方向")])]),t._v(" "),s("h4",{attrs:{id:"向量的形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量的形式"}},[t._v("#")]),t._v(" 向量的形式")]),t._v(" "),s("p",[t._v("二维向量中的形式是(x,y)，三维向量中的形式是(x,y,z)")]),t._v(" "),s("h4",{attrs:{id:"向量的大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量的大小"}},[t._v("#")]),t._v(" 向量的大小")]),t._v(" "),s("ul",[s("li",[t._v("向量各分量的平方和的平方根")]),t._v(" "),s("li",[t._v("$\\sqrt (x^2+y^2+z^2)$")]),t._v(" "),s("li",[t._v("API: "),s("code",[t._v("float dis = vector.magnitude")]),t._v(" "),s("ul",[s("li",[t._v("模的平方 "),s("code",[t._v("vector.sqrMagnitude")])])])])]),t._v(" "),s("h4",{attrs:{id:"向量的方向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量的方向"}},[t._v("#")]),t._v(" 向量的方向")]),t._v(" "),s("ul",[s("li",[t._v("获取向量方向也称“标准化向量”或者“归一化向量”")]),t._v(" "),s("li",[t._v("单位向量：大小为1的向量")]),t._v(" "),s("li",[t._v("几何意义：将该向量拉长/缩短，使模长等于1")]),t._v(" "),s("li",[t._v("API："),s("code",[t._v("Vector3 v = vector.normalized;")]),t._v(" "),s("ul",[s("li",[t._v("v为vector的单位向量")])])])]),t._v(" "),s("h4",{attrs:{id:"向量相减"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量相减"}},[t._v("#")]),t._v(" 向量相减")]),t._v(" "),s("ul",[s("li",[t._v("等于各分量相减")]),t._v(" "),s("li",[t._v("公式：[x1,y1,z1] - [x2,y2,z2] = [x1-x2,y1-y2,z1-z2]")]),t._v(" "),s("li",[t._v("几何意义：向量a与b相减，结果理解为"),s("code",[t._v("b的终点为起点，a的终点为终点，诞生一条新向量，方向由b指向a")])]),t._v(" "),s("li",[t._v("应用：计算两点间的距离和相对方向，可以用于制作抛射物，如子弹发射")])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GameObject")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector3")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GameObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cube"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"向量相加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量相加"}},[t._v("#")]),t._v(" 向量相加")]),t._v(" "),s("ul",[s("li",[t._v("等于各分量相加和")]),t._v(" "),s("li",[t._v("公式： [x1,y1,z1] + [x2,y2,z2] = [x1+x2,y1+y2,z1+z2]")]),t._v(" "),s("li",[t._v("几何意义：向量a与b相加，平移使b的起点与a的终点重合，结果为"),s("code",[t._v("以a的起点为起点，以b的终点为终点")])])]),t._v(" "),s("h4",{attrs:{id:"向量的点乘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量的点乘"}},[t._v("#")]),t._v(" 向量的点乘")]),t._v(" "),s("ul",[s("li",[t._v("公式：各分量乘积和")]),t._v(" "),s("li",[t._v("[x1,y1,z1]·[x2,y2,z2] = x1x2 + y1y2 + z1z2")]),t._v(" "),s("li",[t._v("几何意义: $a"),s("em",[t._v("b=|a|")]),t._v("|b|cos(a,b)$")]),t._v(" "),s("li",[t._v("两个向量的单位向量相乘后，再乘以二者夹角的余弦值")]),t._v(" "),s("li",[t._v("API: "),s("code",[t._v("float dot = Vector3.Dot(va,vb)")])])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")])]),t._v(" length_a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("length_b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GameObject")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    length_a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("magnitude"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    length_b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("magnitude"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vector3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("normalized"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("normalized"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Angle is:"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("Mathf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Acos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vector3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("length_a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" length_b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Mathf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rad2Deg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h4",{attrs:{id:"向量的叉乘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向量的叉乘"}},[t._v("#")]),t._v(" 向量的叉乘")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("公式： [x1,y1,z1] * [x2,y2,z2] = [y1*z2 -z1*y2,z1*x2 - x1*z2, x1*y2 - y1*x2]")])]),t._v(" "),s("li",[s("p",[t._v("几何意义：结果为两个向量所组成的面的垂直向量，模长为两向量模长乘积再乘夹角的正弦值")])]),t._v(" "),s("li",[s("p",[t._v("API："),s("code",[t._v("Vector v = Vector3.Cross(a,b)")])])]),t._v(" "),s("li",[s("p",[t._v("应用")]),t._v(" "),s("ul",[s("li",[t._v("创建垂直于平面的向量")]),t._v(" "),s("li")])])]),t._v(" "),s("h4",{attrs:{id:"角的度量方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#角的度量方式"}},[t._v("#")]),t._v(" 角的度量方式")]),t._v(" "),s("p",[t._v("角度与弧度换算：\nPI = 180°\n1弧度 = 180° / PI\n1角度 = PI / 180°")]),t._v(" "),s("p",[t._v("API:\n弧度 = 角度 * Mathf.Deg2Rad\n角度 = 弧度 * Mathf.Rad2Deg")]),t._v(" "),s("h4",{attrs:{id:"三角函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三角函数"}},[t._v("#")]),t._v(" 三角函数")]),t._v(" "),s("ul",[s("li",[t._v("已知一边一角，求另一边长")]),t._v(" "),s("li",[t._v("对边: a, 角的对立边")]),t._v(" "),s("li",[t._v("临边: b, 角的相邻边")]),t._v(" "),s("li",[t._v("斜边: c, 角的斜边")]),t._v(" "),s("li",[t._v("公式：\n"),s("ol",[s("li",[t._v("正弦 sin(x) = a / c")]),t._v(" "),s("li",[t._v("余弦 cos(x) = b / c")]),t._v(" "),s("li",[t._v("正切 tan(x) = a / b")])])]),t._v(" "),s("li",[t._v("API:\n"),s("ol",[s("li",[t._v("Mathf.Sin(float radian)")]),t._v(" "),s("li",[t._v("Mathf.Cos(float radian)")]),t._v(" "),s("li",[t._v("Mathf.Tan(float radian)")])])])]),t._v(" "),s("h4",{attrs:{id:"欧拉角"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#欧拉角"}},[t._v("#")]),t._v(" 欧拉角")]),t._v(" "),s("ul",[s("li",[t._v("使用三个角度保存方位")]),t._v(" "),s("li",[t._v("X与Z沿自身坐标系旋转，Y沿世界坐标系")]),t._v(" "),s("li",[t._v("优点：\n"),s("ul",[s("li",[t._v("仅用三个数字表达方位，占空间小")]),t._v(" "),s("li",[t._v("沿坐标轴旋转的单位是角度，符合人类思维")]),t._v(" "),s("li",[t._v("任意三个数字都是合法的，不存在不合法的欧拉角")])])]),t._v(" "),s("li",[t._v("万向节死锁\n"),s("ul",[s("li",[t._v("游戏编译期间，代码操作X轴只能+-90°，当抵达极限值时，会发生万向节死锁")]),t._v(" "),s("li",[t._v("即，Y与Z沿同一轴旋转")])])]),t._v(" "),s("li",[t._v("范围：\n"),s("ul",[s("li",[t._v("X: 90~-90")]),t._v(" "),s("li",[t._v("Y: 0~360")]),t._v(" "),s("li",[t._v("Z: 0~360\n切记，Unity中的物体欧拉角通过"),s("code",[t._v("this.transform.eularAngles")]),t._v("获取，类型为"),s("code",[t._v("Vector 3")]),t._v("，虽然与"),s("code",[t._v("position")]),t._v("一样是"),s("code",[t._v("Vector 3")]),t._v("类型，但欧拉角的x,y,z仅代表沿各轴旋转的角度，并没有方向的概念。")])])])]),t._v(" "),s("p",[t._v("但由于欧拉角的X在转到+-90°时会发生万向节死锁，因此引入了一个新的概念 —— 四元数")]),t._v(" "),s("h4",{attrs:{id:"四元数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四元数"}},[t._v("#")]),t._v(" 四元数")]),t._v(" "),s("p",[t._v("Unity中提供了"),s("code",[t._v("Quaternion")]),t._v("工具类用于操作四元数计算，最简单地，我们可以通过"),s("code",[t._v("Quaternion.Euler(0,30,0)")]),t._v("表示为物体沿y轴旋转30°")]),t._v(" "),s("p",[t._v("我们在欧拉角计算中可以通过加法实现角度旋转，但我们并不能直接用欧拉角去加四元数")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("欧拉角加法\nthis.transform.eularAngles += new Vector3(1,0,0); 物体沿X轴旋转一度\n\n四元数加法\nthis.transform.rotation *= Quaternion.Euler(1,0,0);\n\nQuaternion r1 = Quaternion.Euler(0,30,0) * Quaternion.Euler(0,20,0)\nQuaternion r2 = Quaternion.Euler(0,50,0)\nr1的旋转与r2是一样的\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),s("p",[t._v("有时，我们只想知道对比俩向量的长度，可以直接用"),s("code",[t._v("sqrMagnitude")]),t._v("而不是"),s("code",[t._v("magnitude")]),t._v("，相比后者，前者不需要开方，可以节省性能。")]),t._v(" "),s("h4",{attrs:{id:"常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("h6",{attrs:{id:"angle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angle"}},[t._v("#")]),t._v(" Angle")]),t._v(" "),s("ul",[s("li",[t._v("参数: 向量A，向量B")]),t._v(" "),s("li",[t._v("作用：求出两个向量相交角的角度")])]),t._v(" "),s("h6",{attrs:{id:"distance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#distance"}},[t._v("#")]),t._v(" Distance")]),t._v(" "),s("ul",[s("li",[t._v("参数: 向量A，向量B")]),t._v(" "),s("li",[t._v("作用: 求出两个向量间的长度")])]),t._v(" "),s("h6",{attrs:{id:"lerp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lerp"}},[t._v("#")]),t._v(" Lerp")]),t._v(" "),s("ul",[s("li",[t._v("参数: 向量A，向量B，速度")]),t._v(" "),s("li",[t._v("作用: 求出A和B向量间的线性插值，可用于做减速运动")]),t._v(" "),s("li",[t._v("示例:")])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GUILayout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RepeatButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"按我"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vector3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Lerp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Vector3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("A会逐渐接近B，但永远无法到达B，从而实现肉眼上的减速运动。")]),t._v(" "),s("h6",{attrs:{id:"movetowards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#movetowards"}},[t._v("#")]),t._v(" MoveTowards")]),t._v(" "),s("ul",[s("li",[t._v("参数: 向量A，向量B，速度X")]),t._v(" "),s("li",[t._v("作用: A每次向B移动X距离，作用与Lerp类似，但会抵达终点")]),t._v(" "),s("li",[t._v("示例：")])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GUILayout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RepeatButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"按我"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vector3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MoveTowards")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Vector3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("这是匀速啊，但我想实现开头慢中间快末尾慢该怎么办呢？\n我们可以使用AnimationCurve实现这种想法")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnimationCurve")]),t._v(" curve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")])]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnGUI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GUILayout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RepeatButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"按我"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" Time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deltaTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vector3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MoveTowards")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Vector3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Evaluate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);